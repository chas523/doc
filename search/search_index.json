{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction ARRYSA - is the content management system that adapts to any project. Made for developers, designers, creators and clients.","title":"Introduction"},{"location":"#introduction","text":"ARRYSA - is the content management system that adapts to any project. Made for developers, designers, creators and clients.","title":"Introduction"},{"location":"sections/additional_info/documentation/","text":"How to edit documentation Note To edit the documentation, you need to install Material for MkDocs How to run documentation locally clone a repo: git clone https://github.com/chas523/chas523.github.io.git install all dependencies with pip pip install mkdocs-material run the server mkdocs serve How to save changes To save the changes, it is enough to commit the files and push to the repository. The repository has piplines that will automatically build the project.","title":"How to edit documentation"},{"location":"sections/additional_info/documentation/#how-to-edit-documentation","text":"Note To edit the documentation, you need to install Material for MkDocs","title":"How to edit documentation"},{"location":"sections/additional_info/documentation/#how-to-run-documentation-locally","text":"clone a repo: git clone https://github.com/chas523/chas523.github.io.git install all dependencies with pip pip install mkdocs-material run the server mkdocs serve","title":"How to run documentation locally"},{"location":"sections/additional_info/documentation/#how-to-save-changes","text":"To save the changes, it is enough to commit the files and push to the repository. The repository has piplines that will automatically build the project.","title":"How to save changes"},{"location":"sections/back/introduction/","text":"Getting Started There will be all information regarding backend","title":"Getting Started"},{"location":"sections/back/introduction/#getting-started","text":"There will be all information regarding backend","title":"Getting Started"},{"location":"sections/back/start/","text":"Getting Started","title":"Getting Started"},{"location":"sections/back/start/#getting-started","text":"","title":"Getting Started"},{"location":"sections/docker/commands/","text":"Commands Display version of docker docker version Display list of container docker ps -a Display only running containers docker ps Display all images docker images Creating container docker run hello-world Note If the image is not installed locally it will be downloaded from the Docker Hub. In this case hello-world it is image of object. Remove container docker rm <id or name of container> Environment run docker run -it bysybox Note -it option is necessary so that the container is not closed after launching, because we do not send the data anywhere. To run the container in the background docker run -d <id or name> To view detailed information about the container docker container inspect <id or name> optional you can add grep docker container inspect <id> | grep IPAddress How to run an additional process inside the container docker exec -it <id> bash exec - executes a command in the running container it - interactive terminal connection options bash - the name of the process we want to run hostname -i \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 ip \u0430\u0434\u0440\u0435\u0441 \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 For the server to be accessible e.g. by running nginx you need to configure port mapping docker run -p 8080 :80 nginx In order to run your html file on the server there is a command. docker run -v ${ PWD } :/user/share/nginx/html nginx Delete container after stopping docker run -it --rm busybox","title":"Commands"},{"location":"sections/docker/commands/#commands","text":"","title":"Commands"},{"location":"sections/docker/commands/#display-version-of-docker","text":"docker version","title":"Display version of docker"},{"location":"sections/docker/commands/#display-list-of-container","text":"docker ps -a","title":"Display list of container"},{"location":"sections/docker/commands/#display-only-running-containers","text":"docker ps","title":"Display only running containers"},{"location":"sections/docker/commands/#display-all-images","text":"docker images","title":"Display all images"},{"location":"sections/docker/commands/#creating-container","text":"docker run hello-world Note If the image is not installed locally it will be downloaded from the Docker Hub. In this case hello-world it is image of object.","title":"Creating container"},{"location":"sections/docker/commands/#remove-container","text":"docker rm <id or name of container>","title":"Remove container"},{"location":"sections/docker/commands/#environment-run","text":"docker run -it bysybox Note -it option is necessary so that the container is not closed after launching, because we do not send the data anywhere.","title":"Environment run"},{"location":"sections/docker/commands/#to-run-the-container-in-the-background","text":"docker run -d <id or name>","title":"To run the container in the background"},{"location":"sections/docker/commands/#to-view-detailed-information-about-the-container","text":"docker container inspect <id or name> optional you can add grep docker container inspect <id> | grep IPAddress","title":"To view detailed information about the container"},{"location":"sections/docker/commands/#how-to-run-an-additional-process-inside-the-container","text":"docker exec -it <id> bash exec - executes a command in the running container it - interactive terminal connection options bash - the name of the process we want to run hostname -i \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 ip \u0430\u0434\u0440\u0435\u0441 \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430 For the server to be accessible e.g. by running nginx you need to configure port mapping docker run -p 8080 :80 nginx In order to run your html file on the server there is a command. docker run -v ${ PWD } :/user/share/nginx/html nginx","title":"How to run an additional process inside the container"},{"location":"sections/docker/commands/#delete-container-after-stopping","text":"docker run -it --rm busybox","title":"Delete container after stopping"},{"location":"sections/docker/overview/","text":"Docker What this section will be about This section will contain brief information about Docker, as well as a list of commands which are used to build the project. Terminology What is a docker? Docker is a service for launching applications in containers Docker can be used during development as well as during the launch of an application in a production environment. Official documentation here. Benefits of using Docker Applications run in an isolated environment. Easily run applications on different servers. All application dependencies are installed inside containers. Easy to scale by increasing the number of containers. It is very convenient to use in the process of application development What is a container ? A container is the smallest element in the docker world (applications run inside a container and usually the application is one container) Docker components: Client Deamon Host Container Image Repository Registry Info More information about components here","title":"Overview"},{"location":"sections/docker/overview/#docker","text":"","title":"Docker"},{"location":"sections/docker/overview/#what-this-section-will-be-about","text":"This section will contain brief information about Docker, as well as a list of commands which are used to build the project.","title":"What this section will be about"},{"location":"sections/docker/overview/#terminology","text":"What is a docker? Docker is a service for launching applications in containers Docker can be used during development as well as during the launch of an application in a production environment. Official documentation here.","title":"Terminology"},{"location":"sections/docker/overview/#benefits-of-using-docker","text":"Applications run in an isolated environment. Easily run applications on different servers. All application dependencies are installed inside containers. Easy to scale by increasing the number of containers. It is very convenient to use in the process of application development","title":"Benefits of using Docker"},{"location":"sections/docker/overview/#what-is-a-container","text":"A container is the smallest element in the docker world (applications run inside a container and usually the application is one container)","title":"What is a container ?"},{"location":"sections/docker/overview/#docker-components","text":"Client Deamon Host Container Image Repository Registry Info More information about components here","title":"Docker components:"},{"location":"sections/docker/start/","text":"","title":"Getting Started"}]}